{"version":3,"sources":["components/FriendList/FriendList.module.css","components/Profile/Profile.module.css","components/Statistics/Statistical.module.css","components/TransactionHistory/Transactions.module.css","components/Profile/Profile.jsx","components/Statistics/Statistic.jsx","components/FriendList/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.jsx","index.js"],"names":["module","exports","Profile","props","name","tag","location","avatar","stats","followers","views","likes","className","s","profile","src","alt","item","Statistic","title","statistics","list","map","stat","label","percentage","id","FriendListItem","isOnline","on","off","width","FriendList","friends","friend","TransactionHistory","items","history","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a91cbb49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendList_item__1Yy6o\",\"on\":\"FriendList_on__2dcE6\",\"off\":\"FriendList_off__3wGnv\",\"avatar\":\"FriendList_avatar__3ITgg\",\"name\":\"FriendList_name__3yzz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1gw5H\",\"description\":\"Profile_description__1qtGW\",\"avatar\":\"Profile_avatar__3JfdH\",\"name\":\"Profile_name__2h8Rd\",\"stats\":\"Profile_stats__21u3H\",\"item\":\"Profile_item__1Ma-W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistical_statistics__31Yf4\",\"title\":\"Statistical_title__1nwQu\",\"list\":\"Statistical_list__3wMMQ\",\"item\":\"Statistical_item__3DBAM\",\"label\":\"Statistical_label__3DAjZ\",\"percentage\":\"Statistical_percentage__2oDJE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"Transactions_history__2MG8h\"};","import PropTypes from \"prop-types\";\nimport s from \"./Profile.module.css\";\n\nconst Profile = (props) => {\n  const { name, tag, location, avatar, stats } = props;\n  const { followers, views, likes } = stats;\n\n  return (\n    <div className={s.profile}>\n      <div className=\"description\">\n        <img src={avatar} alt=\"User avatar\" className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.item}>\n          <span className=\"label\">Followers</span>\n          <span className=\"quantity\">{followers}</span>\n        </li>\n        <li className={s.item}>\n          <span className=\"label\">Views</span>\n          <span className=\"quantity\">{views}</span>\n        </li>\n        <li className={s.item}>\n          <span className=\"label\">Likes</span>\n          <span className=\"quantity\">{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import PropTypes from \"prop-types\";\nimport s from \"./Statistical.module.css\";\n\nconst Statistic = ({ title, stats }) => {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>Upload stats</h2>}\n\n      <ul className={s.list}>\n        {stats.map((stat) => (\n          <li className={s.item} key={stat.id}>\n            <span className={s.label}>{stat.label}</span>\n            <span className={s.percentage}>{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistic.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Statistic;\n","import PropTypes from \"prop-types\";\nimport s from \"./FriendList.module.css\";\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <>\n      <li className={s.item}>\n        <span className={isOnline ? s.on : s.off}>{isOnline}</span>\n        <img className={s.avatar} src={avatar} alt=\"\" width=\"48\" />\n        <p className={s.name}>{name}</p>\n      </li>\n    </>\n  );\n};\n\nFriendListItem.propTypes = {\n  isOnline: PropTypes.bool.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default FriendListItem;\n","import FriendListItem from \"./FriendListItem.jsx\";\nimport PropTypes from \"prop-types\";\nimport s from \"./FriendList.module.css\";\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={s.list}>\n      {friends.map((friend) => (\n        <li key={friend.id}>\n          <FriendListItem\n            isOnline={friend.isOnline}\n            avatar={friend.avatar}\n            name={friend.name}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from \"prop-types\";\nimport s from \"./Transactions.module.css\";\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={s.history}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map((item) => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default TransactionHistory;\n","import Profile from \"./components/Profile/Profile.jsx\";\nimport user from \"./components/Profile/user.json\";\n\nimport Statistic from \"./components/Statistics/Statistic.jsx\";\nimport statisticalData from \"./components/Statistics/statistical-data.json\";\n\nimport FriendList from \"./components/FriendList/FriendList.jsx\";\nimport friends from \"./components/FriendList/friends.json\";\n\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory.jsx\";\nimport transactions from \"./components/TransactionHistory/transactions.json\";\n\nconst App = () => {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistic title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />,\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}